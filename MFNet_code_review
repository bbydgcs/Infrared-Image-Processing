###原开源代码地址：https://github.com/haqishen/MFNet-pytorch
#第一部分 train.py #
  1.paser文件
    batch_size 默认为8，后期可以考虑调一调
    epoch_max 默认为100，我觉得过大了。根据其loss.txt文件可以看出后期loss基本不降低了
  2.config文件
    n_class = 9
    augmentation_methods是作者自己写的，这部分后期自己可以再调调。
    lr_start=0.01
    lr_decay=0.95,关于学习率的修改后期也可以再调调
  3.main() 部分
    model = eval(args.model_name)(n_class=n_class)
    这个继承MFNet的方式还是挺少见的，找了半天eval来自于哪里。按我的想法，它来自nn.Module的model.eval(),写法比较特别。
    3.1 MFNet.py
        这个文件是MFNet的网络框架代码，主要由两个输入组成的decoder和一个输出通道的decoder。
        其中还包括一些细节，如mini-inception，short-cut block等等。
        decoder:4层下采样，图像尺寸缩小16*16倍。
        mini-inception和shortcut=block的作用我不太能确定，待后面做消融实验证明。
        
    optimizer = torch.optim.SGD(model.parameters(), lr=lr_start, momentum=0.9, weight_decay=0.0005)
    
    train_dataset = MF_dataset(data_dir, 'train', have_label=True, transform=augmentation_methods)
    val_dataset  = MF_dataset(data_dir, 'val', have_label=True)
    3.2 MF_dataset.py
        这个文件是对数据集处理的代码。
        from torch.utils.data.dataset import Dataset MF_dataset继承了此类
        数据集分为train，val，和test集，对应的图片分别写在了train.txt,val.txt,test.txt文件中
    3.3 train()
        插入了对lr逐渐递减的操作，但我觉得不一定有分段的形式好。
        损失函数是交叉熵损失。
    3.4 eval()
